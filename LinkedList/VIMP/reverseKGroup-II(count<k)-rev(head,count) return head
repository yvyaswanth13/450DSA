class Solution {
    
    public static Node rev(Node head, int k)
    {
        Node next;
        Node prev=null;
        Node curr= head;
        int count=0;
        while(curr!=null && count<k)
        {
        next=curr.next;
        curr.next=prev;
        
        prev=curr;
        
        curr=next;
        count++;;
        
        }
        return prev;
        
        
    }
    public static Node reverseKGroup(Node head, int k) {
        // code here
        
        Node curr= head;
        Node temp=head;
        
        Node prev=null;
        
        int count=0;
        
        while(temp!=null && count<k)
        {
           prev=temp;
            temp=temp.next;
            count++;
        }
         if (count < k) 
         {
             Node base= rev(head,count);
             return base;
         }
         
        Node newHead= rev(head,k);
       
       System.out.println(head.data);//12345 and k=3 head.data=1(head stil remains same)
        head.next=reverseKGroup(temp,k); //head=1; head.next=rev(4->5)
        
        return newHead;
        
    }
}
